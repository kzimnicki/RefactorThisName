apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'tomcat'


buildscript {
        repositories {
            mavenCentral()
        }

        dependencies {
            classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.7'
        }
}



repositories {
    mavenCentral()
    mavenLocal()
    mavenRepo url: "http://repo.maven.apache.org/maven2"
}

dependencies {
    def tomcatVersion = '6.0.29'
    tomcat "org.apache.tomcat:catalina:${tomcatVersion}",
           "org.apache.tomcat:coyote:${tomcatVersion}",
           "org.apache.tomcat:jasper:${tomcatVersion}",
           "org.apache.tomcat:dbcp:${tomcatVersion}"
}

allprojects  {
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'groovy'

    group = 'RefactorThisName'
    version = '1.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'tomcat'
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    dependencies {
        def tomcatVersion = '6.0.29'
        tomcat "org.apache.tomcat:catalina:${tomcatVersion}",
           "org.apache.tomcat:coyote:${tomcatVersion}",
           "org.apache.tomcat:jasper:${tomcatVersion}",
           "org.apache.tomcat:dbcp:${tomcatVersion}"
        }

        repositories {
            mavenCentral()
            mavenLocal()
            mavenRepo url: "http://repo.maven.apache.org/maven2"
        }
}

task explodedDist(dependsOn: assemble) << {
    File explodedDist = mkdir("$buildDir/explodedDist")

	subprojects.each {project ->
        project.tasks.withType(War).each {archiveTask ->
			ant.unzip(src: archiveTask.archivePath, dest: "$buildDir/explodedDist")
        }
    }
    ant.zip(destfile: "$buildDir/libs/RefactorThisName-1.0.war") {
        fileset(dir: "$buildDir/explodedDist")
    }
}

[tomcatRun, tomcatRunWar]*.configFile = file('config/context.xml')
[tomcatRun, tomcatStop]*.stopKey = 'stopKey'
//test